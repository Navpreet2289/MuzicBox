---
- hosts: all
  gather_facts: no
  vars:
    project_user: "{{ lookup('file', 'credentials/' + nickname + '/project_user_name') }}"
  vars_files:
    - vars.yml
  remote_user: "{ lookup('file', 'credentials/' + nickname + '/super_user_name') }}"
  become_method: sudo

  tasks:

  - name: Pull sources from repository.
    become: yes
    become_user: "{{ project_user }}"
    git: repo="{{ project_repo }}" dest="{{ project_root }}/code/" version="{{ branch }}" force=yes
    notify: supervisorctrl restart program
    when: vm == 0

  - name: Manually create the initial virtualenv
    become: yes
    become_user: "{{ project_user }}"
    command: virtualenv {{ project_root }}/env/ -p python3 creates="{{ project_root }}/env/"

  - name: Install python requirements.
    become: yes
    become_user: "{{ project_user }}"
    pip: requirements="{{ project_root }}/code/requirements.txt" virtualenv="{{ project_root }}/env/"
    notify: supervisorctrl restart program

  - name: Install nginx configuration file.
    become: yes
    template: src="files/conf/nginx.conf.j2" dest="/etc/nginx/sites-enabled/{{ project_name }}" mode="0644"
    notify: restart nginx

  - name: Install supervisor configuration file.
    become: yes
    template: src="files/conf/supervisor.conf.j2" dest="/etc/supervisor/conf.d/{{ project_name }}.conf" mode="0644"
    notify: 
      - supervisorctrl add program
      - supervisorctrl restart program

  # - name: Install celery configuration file.
  #   become: yes
  #   template: src="files/conf/supervisor_celery.conf.j2" dest="/etc/supervisor/conf.d/celery_{{ project_name }}.conf" mode="0644"
  #   notify: 
  #     - supervisorctrl add celery program
  #     - supervisorctrl restart celery program
  #   tags:
  #     - celery

  - name: Install gunicorn configuration file.
    become: yes
    become_user: "{{ project_user }}"
    template: src="files/conf/gunicorn.conf.py.j2" dest="{{ project_root }}/conf/gunicorn.conf.py" owner="{{ project_user }}" group="{{ project_group }}" mode="0644"
    notify:
      - supervisorctrl restart program
      - restart nginx

  - name: Copy local_settings.py
    become: yes
    become_user: "{{ project_user }}"
    template: src="files/conf/local_settings.conf.py.j2" dest="{{ project_root }}/code/reactmusic/local_settings.py" owner="{{ project_user }}" group="{{ project_group }}" mode="0644"

  - name: Sync Django database.
    become: yes
    become_user: "{{ project_user }}"
    shell: "{{ project_root }}/env/bin/python {{ project_root }}/code/manage.py migrate"

  - name: Collect static files.
    become: yes
    become_user: "{{ project_user }}"
    shell: "{{ project_root }}/env/bin/python {{ project_root }}/code/manage.py collectstatic --clear --noinput"

  - name: Ensure services running
    service: name={{ item }} state=started
    with_items:
      - nginx
      - supervisor

  handlers:
    - include: handlers.yml